#!/bin/bash

# General bash configuration.

SHELL_NAME=bash
export TCONF=$HOME/tconf

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# History configuration
# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth
# for setting history length
HISTSIZE=1000
HISTFILESIZE=2000
# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

if dircolors &> /dev/null; then
  DIRCOLORS=$TCONF/themes/current-theme/dircolors
  (test -r $DIRCOLORS && eval "$(dircolors -b $DIRCOLORS)" || eval "$(dircolors -b)")
fi

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# enable programmable completion features
if ! shopt -oq posix; then
  # UGH! This is so slow!
  if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
  # Git
  if [ -f /usr/share/git/completion/git-completion.bash ]; then
    . /usr/share/git/completion/git-completion.bash
  fi
  if [ -f /usr/share/git/completion/git-prompt.sh ]; then
    . /usr/share/git/completion/git-prompt.sh
  fi
fi

# If ssh-agent isn't running, start it.
if ! pgrep -x -u "${USER}" ssh-agent > /dev/null; then
  ssh-agent > $HOME/.ssh-agent-info
fi

# If gpg-agent isn't running, start it.
if ! pgrep -x -u "${USER}" gpg-agent > /dev/null; then
  gpg-agent --daemon --enable-ssh-support --write-env-file ${HOME}/.gpg-agent-info > /dev/null
fi
. "${HOME}/.gpg-agent-info" > /dev/null
. "${HOME}/.ssh-agent-info" > /dev/null
export GPG_AGENT_INFO
export SSH_AUTH_SOCK

# Load the config if it exists.
load() {
  if [ -f "$1" ]; then
    . "$1"
  fi
}

# Load modular config
MODULES="vars functions aliases ps1"
for MODULE in $MODULES; do
    load "$TCONF/shell/$MODULE"
    load "$TCONF/local/shell/$MODULE"
    load "$TCONF/priv/shell/$MODULE"
done

# Load local configs
load "$TCONF/local/shell/bashrc"
load "$TCONF/priv/shell/bashrc"

# Ruby version manager
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
