#!/bin/bash

# Kubernetes
alias k8s-e2e='kubetest -v'
alias k8s-make-e2e='make WHAT=test/e2e/e2e.test'
function k8s-e2e-run() {
  if [[ $# == 0 ]]; then
    kubetest -v -test $@
  else
    kubetest -v -test --test_args="--ginkgo.focus=${1// /\\s}" ${@:2}
  fi
}

function k8s-node() {
  # 0 is master, default to 1
  INDEX=${1:-1}
  kubectl get nodes -o=jsonpath="{.items[$INDEX].metadata.name}"
}

function k8s-node-zone() {
  NODE=${1:-$(k8s-node)}
  kubectl get node $NODE -o=go-template='{{index .metadata.labels "failure-domain.beta.kubernetes.io/zone"}}'
}

function k8s-node-proxy() {
  if [[ $# == 0 ]]; then
    NODE=$(k8s-node)
  else
    NODE=$1
  fi
  echo "localhost:8001/api/v1/proxy/nodes/$NODE:10250"
}

function k8s-node-ssh() {
  NODE=${1:-$(k8s-node)}
  ZONE=$(k8s-node-zone $NODE)
  gcloud compute ssh --zone=$ZONE $NODE
}

function gogo() {
  local PROJECT="$1"
  local PROJECT_DIR=""
  local BASE="$HOME/go/$PROJECT"

  case $PROJECT in
    k8s*)
      PROJECT_DIR="$BASE/src/k8s.io/kubernetes"
      ;;
    heapster)
      PROJECT_DIR="$BASE/src/k8s.io/heapster"
      ;;
    cadvisor)
      PROJECT_DIR="$BASE/src/github.com/google/cadvisor"
      ;;
    *)
      echo "Unknown go project '$PROJECT'" 1>&2
      return
      ;;
  esac
  export GOPATH="$BASE"
  export __G_PROJECT="$PROJECT"
  export __G_PROJECT_DIR="$PROJECT_DIR"
  cd $__G_PROJECT_DIR
}
alias gg='gogo'

# Grab log files
function k8s-kubelet-log() {
  NODE=${1:-$(k8s-node)}
  ZONE=$(k8s-node-zone $NODE)
  DATE="$(date +%y.%m.%d.%H%M)"
  DST="$HOME/logs/kubelet_$NODE_${DATE}.log"
  echo "Copying $NODE kubelet.log to $DST ..."
  gcloud compute copy-files --zone=$ZONE "${NODE}:/var/log/kubelet.log" "$DST"
}

# Grep for a branch across k8s{1,2,3}
function k8s-branch() {
  pushd . > /dev/null
  RESULT=1
  for BR in k8s{1,2,3}; do
    cd "$HOME/go/$BR/src/k8s.io/kubernetes"
    git branch | awk "{print \"$BR:\", \$0}" | grep $*
    RESULT=$((RESULT * $?))
  done
  popd > /dev/null
  return $RESULT
}

# K8s deploy environment
alias k8s-env='echo ${K8S_ENV:-default}'
alias k8s-env-small='source $HOME/k8s/devel/config/config-small.sh && k8s-env'

# Go aliases
alias ago='ag --ignore "*_test.go" --ignore Godeps --ignore vendor -G ".*\.go$"'
alias ago-test='ag --ignore Godeps -G ".*_test\.go$"'
alias godep-test-dir='. $HOME/k8s/devel/scripts/godep-test-dir.sh'

alias graph-png="dot -Tpng -o /tmp/graph.png && google-chrome /tmp/graph.png"
alias graph-svg="dot -Tsvg -o /tmp/graph.svg && google-chrome /tmp/graph.svg"
